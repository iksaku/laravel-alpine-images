name: Image Builder

on:
  push:
    paths-ignore:
      - '**.md'
  pull-request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 7 * * 1'

jobs:
  build:
    name: 'laravel-alpine:${{ matrix.php }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Build image
        run: |
          docker build \
            -t laravel-alpine:latest \
            ${{ matrix.php }}

      - name: Assign Tags
        run: |
          VERSION='${{ matrix.php }}'
          RELEASE=$(docker run --rm laravel-alpine:latest /bin/sh php -r 'echo PHP_RELEASE_VERSION;')

          PARTS=( ${VERSION} ".${RELEASE}" )

          TAG=''
          for PART in ${PARTS[@]}; do
            TAG+="${PART}"

            docker tag laravel-alpine:latest "ghcr.io/iksaku/laravel-alpine:${TAG}"
          done

          # Exclude 'latest' tag from deployment
          docker rmi laravel-alpine:latest
      
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          
          docker push --all-tags ghcr.io/iksaku/laravel-alpine

  build_octane:
    name: 'laravel-alpine:${{ matrix.php }}-octane-${{ matrix.runtime }}'
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        php: [8.1]
        runtime: ['roadrunner', 'swoole']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build image
        run: |
          docker build \
            --build-arg PHP_VERSION=${{ matrix.php }} \
            -t laravel-alpine:latest \
            -f ${{ matrix.php }}/Dockerfile.octane.${{ matrix.runtime }} \
            ${{ matrix.php }}
      
      - name: Assign Tags
        run: |
          VERSION='${{ matrix.php }}'
          RELEASE=$(docker run --rm laravel-alpine:latest /bin/sh php -r 'echo PHP_RELEASE_VERSION;')

          PARTS=( ${VERSION} ".${RELEASE}" )

          TAG=''
          for PART in ${PARTS[@]}; do
            TAG+="${PART}"

            docker tag laravel-alpine:latest "ghcr.io/iksaku/laravel-alpine:${TAG}-octane-${{ matrix.runtime }}"
          done

          # Exclude 'latest' tag from deployment
          docker rmi laravel-alpine:latest

      - name: Push Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          
          docker push --all-tags ghcr.io/iksaku/laravel-alpine
