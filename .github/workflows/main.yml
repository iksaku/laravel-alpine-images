name: Image Builder

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 7 * * 1'

jobs:
  build:
    name: php-${{ matrix.php }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        php:
          - '8.0'
          - '8.1'
          - '8.2'
    steps:
      - name: Get Latest PHP Version
        run: |
          echo "PHP_VERSION=$(docker run --rm php:${{ matrix.php }}-cli-alpine php -r 'echo PHP_VERSION;')" >> $GITHUB_ENV
          echo "PHP_RELEASE_VERSION=$(docker run --rm php:${{ matrix.php }}-cli-alpine php -r 'echo PHP_RELEASE_VERSION;')" >> $GITHUB_ENV

      - name: Check if Image is up to date
        if: ${{ github.event_name == 'schedule' }}
        run: |
          CURRENT_VERSION=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }} php -r 'echo PHP_VERSION;')
          if [ "${{ env.PHP_VERSION }}" == "$CURRENT_VERSION" ]; then
            echo "PHP version is up to date: v${{ env.PHP_VERSION }}"
            echo "UP_TO_DATE=true" >> $GITHUB_ENV
          else
            echo "PHP version is outdated. Got v$CURRENT_VERSION, expected v${{ env.PHP_VERSION }}"
          fi

      - name: Checkout Code
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: actions/checkout@v3

      - name: Get Docker Context
        if: ${{ env.UP_TO_DATE != 'true' }}
        run: echo "DOCKER_BUILD_CONTEXT=$(echo ${{ matrix.php }} | sed -r 's/^([0-9]+)\..*$/\1.x/')" >> $GITHUB_ENV

      - name: Generate Image Metadata
        if: ${{ env.UP_TO_DATE != 'true' }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iksaku/laravel-alpine
          tags: |
            type=raw,${{ matrix.php }}
            type=raw,${{ matrix.php }}.${{ env.PHP_RELEASE_VERSION }}

      - name: Set up QEMU
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}

  build_octane:
    name: php-${{ matrix.php }} octane-${{ matrix.runtime }}
    runs-on: ubuntu-latest
    timeout-minutes: 40
    needs: build
    strategy:
      matrix:
        php:
          - '8.0'
          - '8.1'
          - '8.2'
        runtime:
          - roadrunner
          - swoole
    steps:
      - name: Get Latest (Non-Octane Image) PHP version
        run: |
          echo "PHP_VERSION=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }} php -r 'echo PHP_VERSION;')" >> $GITHUB_ENV
          echo "PHP_RELEASE_VERSION=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }} php -r 'echo PHP_RELEASE_VERSION;')" >> $GITHUB_ENV

      - name: Get Latest ${{ matrix.runtime }} version
        run: |
          if [ "${{ matrix.runtime }}" == "roadrunner" ]; then
            LATEST_RUNTIME_VERSION=$(docker run --rm ghcr.io/roadrunner-server/roadrunner:latest -v | sed -r 's/^rr version ([0-9\.]+) .*/\1/')
          elif [ "${{ matrix.runtime }}" == "swoole" ]; then
            LATEST_RUNTIME_VERSION=$(docker run --rm phpswoole/swoole:5.0-php${{ matrix.php }}-alpine php -r 'echo swoole_version();')
          fi
          
          echo "RUNTIME_VERSION=$LATEST_RUNTIME_VERSION" >> $GITHUB_ENV

      - name: Check if Image is up to date
        if: ${{ github.event_name == 'schedule' }}
        run: |
          CURRENT_PHP_VERSION=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }}-octane-${{ matrix.runtime }} php -r 'echo PHP_VERSION;')
          if [ "${{ env.PHP_VERSION }}" == "$CURRENT_PHP_VERSION" ]; then
            echo "PHP version is up to date: ${{ env.PHP_VERSION }}"
            echo "UP_TO_DATE=true" >> $GITHUB_ENV
          else
            echo "PHP version is outdated. Got $CURRENT_PHP_VERSION, expected ${{ env.PHP_VERSION }}"
          fi
          
          if [ "${{ matrix.runtime }}" == "roadrunner" ]; then
            CURRENT_RUNTIME_VERSION=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }}-octane-${{ matrix.runtime }} rr -v | sed -r 's/^rr version ([0-9\.]+) .*/\1/')
          elif [ "${{ matrix.runtime }}" == "swoole" ]; then
            CURRENT_RUNTIME_VERSION=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }}-octane-${{ matrix.runtime }} php -r 'echo swoole_version();')
          fi
          
          if [ "${{ env.RUNTIME_VERSION }}" == "$CURRENT_RUNTIME_VERSION" ]; then
            echo "Runtime version is up to date: ${CURRENT_RUNTIME_VERSION}"
            echo "UP_TO_DATE=true" >> $GITHUB_ENV
          else
            echo "Runtime version is outdated. Got $CURRENT_RUNTIME_VERSION, expected ${{ env.RUNTIME_VERSION }}"
          fi

      - name: Checkout Code
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: actions/checkout@v3

      - name: Get Docker Context
        if: ${{ env.UP_TO_DATE != 'true' }}
        run: echo "DOCKER_BUILD_CONTEXT=$(echo ${{ matrix.php }} | sed -r 's/^([0-9]+)\..*$/\1.x/')" >> $GITHUB_ENV

      - name: Generate Image Metadata
        if: ${{ env.UP_TO_DATE != 'true' }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iksaku/laravel-alpine
          tags: |
            type=raw,${{ matrix.php }}-octane-${{ matrix.runtime }}
            type=raw,${{ matrix.php }}.${{ env.PHP_RELEASE_VERSION }}-octane-${{ matrix.runtime }}
            type=raw,${{ matrix.php }}.${{ env.PHP_RELEASE_VERSION }}-octane-${{ matrix.runtime }}-${{ env.RUNTIME_VERSION }}

      - name: Set up QEMU
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: ${{ env.UP_TO_DATE != 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}
          file: ${{ env.DOCKER_BUILD_CONTEXT }}/Dockerfile.octane.${{ matrix.runtime }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
