name: Image Builder

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 7 * * 1'

jobs:
  build:
    name: laravel-alpine:${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get PHP Release Version
        id: php_release
        run: echo "::set-output name=version::$(docker run --rm php:${{ matrix.php }}-cli-alpine php -r 'echo PHP_RELEASE_VERSION;')"

      - name: Generate Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iksaku/laravel-alpine
          tags: |
            type=raw,${{ matrix.php }}
            type=raw,${{ matrix.php }}.${{ steps.php_release.outputs.version }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.php }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}

  build_octane:
    name: laravel-alpine:${{ matrix.php }}-octane-${{ matrix.runtime }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        php: [8.1]
        runtime: ['roadrunner', 'swoole']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Get PHP Release Version
        id: php_release
        run: echo "::set-output name=version::$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }} /bin/sh php -r 'echo PHP_RELEASE_VERSION;')"

      - name: Generate Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iksaku/laravel-alpine
          tags: |
            type=raw,${{ matrix.php }}-octane-${{ matrix.runtime }}
            type=raw,${{ matrix.php }}.${{ steps.php_release.outputs.version }}-octane-${{ matrix.runtime }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.php }}
          file: ${{ matrix.php }}/Dockerfile.octane.${{ matrix.runtime }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
