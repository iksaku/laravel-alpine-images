name: Image Builder

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: '0 7 * * 1'

jobs:
  build:
    name: php-${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - 8.1
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Docker Context
        id: docker_context
        run: echo "context=$(echo ${{ matrix.php }} | sed -r 's/^([0-9]+)\..*$/\1.x/')" >> $GITHUB_OUTPUT

      - name: Get PHP Release Version
        id: php_release
        run: echo "version=$(docker run --rm php:${{ matrix.php }}-cli-alpine php -r 'echo PHP_RELEASE_VERSION;')" >> $GITHUB_OUTPUT

      - name: Generate Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iksaku/laravel-alpine
          tags: |
            type=raw,${{ matrix.php }}
            type=raw,${{ matrix.php }}.${{ steps.php_release.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ steps.docker_context.outputs.context }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}

  build_octane:
    name: php-${{ matrix.php }} octane-${{ matrix.runtime }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        php:
          - 8.1
        runtime:
          - roadrunner
          - swoole
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Get Docker Context
        id: docker_context
        run: echo "context=$(echo ${{ matrix.php }} | sed -r 's/^([0-9]+)\..*$/\1.x/')" >> $GITHUB_OUTPUT
      
      - name: Get PHP Release Version
        id: php_release
        run: echo "version=$(docker run --rm ghcr.io/iksaku/laravel-alpine:${{ matrix.php }} php -r 'echo PHP_RELEASE_VERSION;')" >> $GITHUB_OUTPUT

      - name: Generate Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/iksaku/laravel-alpine
          tags: |
            type=raw,${{ matrix.php }}-octane-${{ matrix.runtime }}
            type=raw,${{ matrix.php }}.${{ steps.php_release.outputs.version }}-octane-${{ matrix.runtime }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ steps.docker_context.outputs.context }}
          file: ${{ steps.docker_context.outputs.context }}/Dockerfile.octane.${{ matrix.runtime }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
